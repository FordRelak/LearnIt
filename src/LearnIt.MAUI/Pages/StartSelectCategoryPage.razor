@page "/"
@page "/StartSelectCategory"
@using LearnIt.DTO

<style>

    .box {
        background: #F4F4F4;
        border-radius: 10px;
        width: 100%;
        display: flex;
        flex-direction: column;
        overflow: auto;
    }

    .category {
        background-color: white;
        border-radius: 10px;
        height: 40px;
        margin-bottom: 15px;
        text-align: center;
        width: 100%;
        padding: 10px 0;
        box-shadow: 1px 3px 5px rgba(0, 0, 0, 0.15);
        font-family: 'Nunito';
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
        line-height: 24px;
    }

        .category:last-child {
            margin-bottom: 0;
        }

        .category.active {
            background: linear-gradient(135deg, #7EAEFF 2.88%, #FCA6E9 100%);
        }

    input:checked + label {
        background: linear-gradient(135deg, #7EAEFF 2.88%, #FCA6E9 100%);
        color: white;
    }

    .flex-1{
        flex: 1;
    }
</style>

<section class="d-flex flex-column px-4 flex-1">

    <div class="pt-4">
        <h2 class="mt-3">Выберите интересующие вас категории</h2>

        <hr />
    </div>

    <div class="box p-3">

        @foreach(var category in categoryDtos)
        {
            if(IsSelected(category.Id))
            {
                <input checked
               type="checkbox"
               hidden id="@category.Id"
               name="@category.Id"
               @onchange="(e) => {OnCheckBoxClicked(category.Id, e);}" />
            }
            else
            {
                <input type="checkbox"
               hidden id="@category.Id"
               name="@category.Id"
               @onchange="(e) => {OnCheckBoxClicked(category.Id, e);}" />
            }
            <label for="@category.Id" class="category">
                @category.Name
            </label>
        }

    </div>

    <div class="mx-auto py-5">
        <button class="btn-next bg-blackberry" type="button" @onclick="GoToNextPage">Далее</button>
    </div>

</section>

@code {
    private ICollection<ShortCategoryDto> categoryDtos = new List<ShortCategoryDto>();
    private List<long> _startCategoryIds = new();

    void OnCheckBoxClicked(long id, object e)
    {
        if(_startCategoryIds.Contains(id))
        {
            _startCategoryIds.Remove(id);
        }
        else
        {
            _startCategoryIds.Add(id);
        }
    }

    bool IsSelected(long categoryId)
    {
        return _startCategoryIds.Contains(categoryId);
    }

    protected override async Task OnInitializedAsync()
    {
        categoryDtos = await ICategoryApi.GetCategories();
        _startCategoryIds = LocalCategoryService.GetCategoryIds().ToList();
    }

    void GoToNextPage()
    {
        LocalCategoryService.InsertCategoryIds(_startCategoryIds.ToArray());
        LocalCategoryService.SetSkipStartPage();
        NavigationManager.NavigateTo("/ChooseWordPerLearn");
    }
}
