@page "/"

<style>
    section {
        height: 100vh;
    }

    .box {
        background: #F4F4F4;
        border-radius: 10px;
        width: 100%;
        display: flex;
        flex-direction: column;
        overflow: auto;
    }

    .category {
        background-color: white;
        border-radius: 10px;
        height: 40px;
        margin-bottom: 15px;
        text-align: center;
        width: 100%;
        padding: 10px 0;
        filter: drop-shadow(1px 3px 5px rgba(0, 0, 0, 0.15));
        font-family: 'Nunito';
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
        line-height: 24px;
    }

        .category:last-child {
            margin-bottom: 0;
        }

        .category.active {
            background: linear-gradient(135deg, #7EAEFF 2.88%, #FCA6E9 100%);
        }

    input:checked + label {
        background: linear-gradient(135deg, #7EAEFF 2.88%, #FCA6E9 100%);
        color: white;
    }
</style>

<section class="d-flex flex-column">

    <div class="pt-4">
        <h2 class="mt-3">Выберите интересующие вас категории</h2>

        <hr />
    </div>

    <div class="box p-3 flex-grow-1">

        @for(var i = 0; i < 13; i++)
        {
            <input type="checkbox" hidden id="@i" name="@i" @onchange="eventArgs => {OnCheckBoxClicked(i, eventArgs);}" />
            <label for="@i" class="category">
                Категория_@i
            </label>
        }

    </div>

    <div class="mx-auto py-5">
        <button class="btn-next bg-blackberry" type="button" @onclick="GoToNextPage">Далее</button>
    </div>

</section>

@code {
    private StartCategoryModel _startCategoryModel = new();

    void OnCheckBoxClicked(long id, object eventArgs)
    {
        if(_startCategoryModel.CategoryIds.Contains(id))
        {
            _startCategoryModel.CategoryIds.Remove(id);
        }
        else
        {
            _startCategoryModel.CategoryIds.Add(id);
        }
    }

    void GoToNextPage()
    {
        NavigationManager.NavigateTo("/chooseWordPerLearn");
    }
}
